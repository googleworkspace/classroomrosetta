# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys

if sys.version_info < (3,):
    try:
        from thread import allocate_lock
    except ImportError:
        from dummy_thread import allocate_lock
else:
    try:
        from _thread import allocate_lock
    except ImportError:
        from _dummy_thread import allocate_lock


##import sys
##l1 = allocate_lock

##class allocate_lock(object):
##    def __init__(self):
##        self._real = l1()
##    def __enter__(self):
##        for i in range(4, 0, -1):
##            print sys._getframe(i).f_code
##        print
##        return self._real.__enter__()
##    def __exit__(self, *args):
##        return self._real.__exit__(*args)
##    def acquire(self, f):
##        assert f is False
##        return self._real.acquire(f)
